At this point I don't recommend upgrading to 1.4 unless you want the
internationalization, cause that's all that was added, and I probably
broke a bunch of stuff in the process.

Between 1.3 and 1.4 I reformatted most of the code, since a lot had to
change anyway for gettext support.  Most of the upgrading work involves
copying all the updated php3 files onto your installed version.  There
are also a couple new config settings, all dealing with localization.
You can set these through the admin box:

* "locale" should be set with the locale you're using, like "it_IT", or
  I think the default is "C".
* "daybeforemonth" should be set to some non-zero value if you're one of
  those funny European people that uses a dd/mm/yy date format.
* "textdomain_dir" should be set to the directory where your .mo files
  are installed, like /usr/share/locale or ./locale if they're in your
  calendar directory.
* "textdomain" is used to tell gettext which .mo files to use.  I
  decided to use "eventcalendar", but if you install the .mo files as
  something other than "eventcalendar.mo", then set this accordingly.

You'll also need to install the .mo files, of course.  To do this you
can go into the po directory, copy Makefile.in to Makefile and
substitute all the <<variables>> with the values you used above
(<<msgfmt>> if the path to msgfmt), and run "make install" as root.

===
There were some significant changes after version 1.2, but upgrading to 1.3
shouldn't be too difficult.  You'll need to update the php files (of
course).  You'll also need to create a config table in the srccalendar
database, which you can do by connecting to the db with psql and running:

CREATE TABLE srcconfig ("key" text NOT NULL PRIMARY KEY,
	"value" text, "description" text);
GRANT SELECT on srcconfig to guest;
GRANT SELECT,UPDATE,INSERT,DELETE on srcconfig to foo;

where foo is your read-write database user.  You'll also need to grant
write access to a bunch of tables that I previously suggested be
read-only: srclocation, srcaudience, and srccategory, and the permissions
table in the auth database.

To load your configuration from includes/config.inc into the database,
move the loadConfig.php3 script into your calendar directory and point
your web browser at it.  This script will remove any existing rows from
the srcconfig table and rebuild it with the settings from config.inc.
You'll have to enter any new variables that you've added to config.inc
yourself.  Once you've loaded the config tables, make sure you move
loadConfig.php3 someplace inaccessible from the web.  It could be used 
to load a different configuration, and we wouldn't want that.

===
Upgrading the calendar from 1.1 to 1.2 is trivial.  Aside from copying the
updated php files from the calendar directory, you will need to add a
modify_id column to the srcevent table in srccalendar.  To do this,
connect to srccalendar using psql and run the following statement:
"ALTER TABLE srcevent ADD COLUMN modify_id int4;"

===
Upgrading the calendar from 1.0 to 1.1 is relatively simple.  Aside from
copying the updated php files from auth and calendar, you will need to
edit calendar/includes/config.inc to suit your needs.  All other
references to Simon's Rock, except that in the footer, have been removed
from the generated HTML.

This version also uses an indexing system, for which you'll need to create
a new table in srccalendar.  This table is called srcindex, and can be
created as follows in psql:

CREATE TABLE "srcindex" ("event_id" "int4" NOT NULL, \
	"timestamp" "int4" NOT NULL );
CREATE INDEX "srcindex_pkey" on "srcindex" \
	using btree( "timestamp" "int4_ops" );

This table will then need to be updated, which you can do by opening your
browser to your.site.com/yourcalendarbase/genIndex.php3

This page can also be used to regenerate the index in the event of
inconsistency.
