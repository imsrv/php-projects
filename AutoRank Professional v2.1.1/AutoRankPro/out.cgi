#!/usr/bin/perl
####################################
##  AutoRank Professional v2.1.1  ##
###############################################################
##  out.cgi                                                  ##
##  -------                                                  ##
##  This script tracks outgoing hits.                        ##
###############################################################

###############################################################
##                   DO NOT EDIT THIS FILE                   ##
###############################################################

package out;

use strict;
use GDBM_File;

$out::sd_dir = "./sdata";
$out::md_dir = "./members";

my(%mem);

if( $ENV{'REQUEST_METHOD'} eq "GET" ) {
  
  eval {
    my $url = give_hit( $ENV{'QUERY_STRING'} );
    print "Location: $url\n\n";
  };

  if($@) {
    print "Content-type: text/html\n\n";
    print "<b>Script Error:</b> $@"
  }
}
else {
  print "Malformed access method;";
}
exit;

sub give_hit {
  my $acct = shift;

  my $ret = "";

  dbmopen(%mem, "$out::sd_dir/members", 0666) || error("members", "out::give_hit()", $!);
  
  if( defined( $mem{$acct} ) ) {
    my @md = split(/\|/, $mem{$acct});

    $md[1]++;
    $ret = $md[8];
    
    $mem{$acct} = join('|', @md);
  }
  
  dbmclose( %mem );
  
  return $ret;
}

sub error {
  my($file, $fnct, $cause) = @_;
  my $user  = (getpwuid( $< ))[0];
  my $group = (getgrgid( $) ))[0];
  
  if( $OPT::ERR && $cause !~ /resource/i ) {
    open(ERRLOG, ">>$rank::sd_dir/error.log");
    print ERRLOG "[ ", scalar(localtime()), " ]  [ $ENV{'REMOTE_ADDR'} ]  [ $file ]  [ $cause ]  [ $fnct ]\n";
    close(ERRLOG);
  }
  
  if( $cause =~ /resource/i ) {
    require "$out::sd_dir/vars.dat";
    print "Location: $VAR::FU\n\n";
  }
  else {
    print "Content-type: text/html\n\n";
    print "<pre>\nA CGI ERROR HAS OCCURRED\n========================\n";
    print "Error Message     :  $cause\n";   
    print "Accessing File    :  $file\n";
    print "Calling Function  :  $fnct\n";
    print "Running as User   :  $user\n";
    print "Running as Group  :  $group\n";
    print "Script Filename   :  $ENV{'SCRIPT_FILENAME'}\n";
  }
  
  exit -1;
}
